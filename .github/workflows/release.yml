name: Build and Release with PyInstaller (Windows)

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build-windows:
    runs-on: windows-latest
    strategy:
      matrix:
        python-version: [3.12.1]

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller

    - name: Build executable with PyInstaller
      run: |
        pyinstaller --onefile --windowed --icon=app.ico --add-data "background.png;." main.py
      shell: bash

    - name: Verify executable exists
      run: |
        if (!(Test-Path -Path "dist\main.exe")) { 
            Write-Host "Executable not found!" 
            exit 1 
        }

    - name: Install 7-Zip
      run: |
        choco install 7zip --yes

    - name: Create Self-Extracting EXE (SFX)
      run: |
        & "C:\Program Files\7-Zip\7z.exe" "a" "dist\main-sfx.exe" "dist\main.exe" "-sfx"

    - name: Upload artifact (Self-Extracting EXE)
      uses: actions/upload-artifact@v3
      with:
        name: windows-sfx
        path: dist/main-sfx.exe

  create-release:
    needs: build-windows
    runs-on: ubuntu-latest
    steps:
    - name: Download Windows SFX artifact
      uses: actions/download-artifact@v3
      with:
        name: windows-sfx
        path: ./release

    - name: Create GitHub Release
      uses: ncipollo/release-action@v1
      with:
        artifacts: |
          release/main-sfx.exe
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: ${{ github.ref_name }}
        name: Release ${{ github.ref_name }}
        draft: false
        prerelease: false
